[general]
lumi = 19500 # pb^-1 2016 preVFP
#data = DsingleMuB, DsingleMuC, DsingleMuD, DsingleMuE, DsingleMuF, DMETB, DMETC, DMETD, DMETE, DMETF
data = DsingleMuB, DsingleMuC, DsingleMuD, DsingleMuE, DsingleMuF
signals = GGF_Radion1000
backgrounds =  DY_NLO_Incl, DY_NLO_0jet, DY_NLO_1jet, DY_NLO_2jet, DY_NLO_PtZ-0To50, DY_NLO_PtZ-50To100, DY_NLO_PtZ-100To250,DY_NLO_PtZ-250To400, DY_NLO_PtZ-400To650, DY_NLO_PtZ-650ToInf
variables = dau1_pt, dau2_pt, dau1_eta, dau2_eta, bjet1_pt, bjet2_pt, bjet1_eta, bjet2_eta, tauH_mass, tauH_SVFIT_mass, tauH_pt, tauH_SVFIT_pt, bH_pt, bH_mass, bjet1_bID_deepFlavor, bjet2_bID_deepFlavor, ditau_deltaR, HH_pt, HH_mass, HHKin_mass, met_et, met_phi , DNNoutSM_kl_1, fatjet_pt, fatjet_eta, fatjet_phi, fatjet_softdropMass, fatjet_particleNetMDJetTags_score, fatjet_particleNetMDJetTags_mass, HHbregrsvfit_m,HHbregrsvfit_pt, HHbregrsvfit_eta, bjet1_CvsL, bjet1_CvsB, bjet1_HHbtag, bjet2_CvsL, bjet2_CvsB, bjet2_HHbtag 
selections = baseline, baseline_boosted, s1b1jresolvedMcut, s2b0jresolvedMcut, sboostedL_pnet
regions    = SR, SStight, OSinviso, SSinviso  

[configs]
sampleCfg = config/sampleCfg_UL2016APV.cfg
cutCfg    = config/selectionCfg_MuMu_UL2016APV.cfg
#pattern   = goodsystfiles  # use this only when running on systematics files


[merge_plots]
#data_obs  = DsingleMuB, DsingleMuC, DsingleMuD, DsingleMuE, DsingleMuF, DMETB, DMETC, DMETD, DMETE, DMETF
data_obs  = DsingleMuB, DsingleMuC, DsingleMuD, DsingleMuE, DsingleMuF
DY	 = DY_NLO_Incl, DY_NLO_0jet, DY_NLO_1jet, DY_NLO_2jet, DY_NLO_PtZ-0To50, DY_NLO_PtZ-50To100, DY_NLO_PtZ-100To250, DY_NLO_PtZ-250To400, DY_NLO_PtZ-400To650, DY_NLO_PtZ-650ToInf


[merge_limits]
# For limits
data_obs    = DsingleMuB, DsingleMuC, DsingleMuD, DsingleMuE, DsingleMuF
#data_obs    = DsingleMuB, DsingleMuC, DsingleMuD, DsingleMuE, DsingleMuF, DMETB, DMETC, DMETD, DMETE, DMETF
DY          = DY_NLO_Incl, DY_NLO_0jet, DY_NLO_1jet, DY_NLO_2jet, DY_NLO_PtZ-0To50, DY_NLO_PtZ-50To100, DY_NLO_PtZ-100To250, DY_NLO_PtZ-250To400, DY_NLO_PtZ-400To650, DY_NLO_PtZ-650ToInf


[pp_merge]
## parameters for QCD evaluation
## doFitIf : condition to be respected to make rlx-to-tight QCD fit. It is used as eval(doFitIf). Use names sel, var

[pp_QCD]
#for inverted QCD
QCDname      = QCD
SR           = SR
yieldSB      = OSinviso
shapeSB      = OSinviso
SBtoSRfactor = 1
doFitIf      = False
fitFunc      = [0] + [1]*x
regionC      = SStight
regionD      = SSinviso


[VBF_rew]
# !WARNING! The input samples MUST be in the order: node1, node2, node3, node4, node5, node19 !
# See the list 'inputSignals' to understand the link node<->couplings
doReweighting = False
inputSignals = VBFHH_CV_1_C2V_1_C3_1, VBFHH_CV_1_C2V_1_C3_0, VBFHH_CV_1_C2V_1_C3_2, VBFHH_CV_1_C2V_2_C3_1, VBFHH_CV_1_5_C2V_1_C3_1, VBFHH_CV_1_C2V_0_C3_2
target_kl  = 1
target_cv  = 0, 1
target_c2v = 1
target_xs = 1 #[pb]