[general]
lumi = 19500 # pb^-1 2016 preVFP
#data = DsingleMuB, DsingleMuC, DsingleMuD, DsingleMuE, DsingleMuF, DMETB, DMETC, DMETD, DMETE, DMETF
data = DsingleMuB, DsingleMuC, DsingleMuD, DsingleMuE, DsingleMuF

signals = GGF_Radion250, GGF_Radion260, GGF_Radion270, GGF_Radion280, GGF_Radion300, GGF_Radion320, GGF_Radion350, GGF_Radion400, GGF_Radion450, GGF_Radion500, GGF_Radion550, GGF_Radion600, GGF_Radion650, GGF_Radion700,GGF_Radion750, GGF_Radion800, GGF_Radion850, GGF_Radion900, GGF_Radion1000, GGF_Radion1250, GGF_Radion1500, GGF_Radion1750, GGF_Radion2000, GGF_Radion2500, GGF_Radion3000

backgrounds = TTfullyHad, TTfullyLep, TTsemiLep, DY_NLO_Incl, DY_NLO_0jet, DY_NLO_1jet, DY_NLO_2jet, DY_NLO_PtZ-0To50, DY_NLO_PtZ-50To100, DY_NLO_PtZ-100To250,DY_NLO_PtZ-250To400, DY_NLO_PtZ-400To650, DY_NLO_PtZ-650ToInf, WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, TWtop, TWantitop, singleTop_top, singleTop_antitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, WW, WZ,ZZ, ZH_HTauTau, ggHTauTau, VBFHTauTau, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB, ttHJetToTauTau, WWW, WWZ, WZZ, ZZZ, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTWW, TTWZ, TTZZ

variables = dau1_pt, dau2_pt, dau1_eta, dau2_eta, bjet1_pt, bjet2_pt, bjet1_eta, bjet2_eta, tauH_mass, tauH_SVFIT_mass, tauH_pt, tauH_SVFIT_pt, bH_pt, bH_mass, bjet1_bID_deepFlavor, bjet2_bID_deepFlavor, ditau_deltaR, HH_pt, HH_mass, HHKin_mass, met_et, met_phi, DNNoutSM_kl_1, fatjet_pt, fatjet_eta, fatjet_phi, fatjet_softdropMass, fatjet_particleNetMDJetTags_score, fatjet_particleNetMDJetTags_mass, HHbregrsvfit_m, HHbregrsvfit_pt, HHbregrsvfit_eta, dau1_iso, dau2_iso, dib_deltaR, HH_deltaR, dau1_deepTauVsMu, dau1_deepTauVsEle, dau1_deepTauVsJet, dau2_deepTauVsMu, dau2_deepTauVsEle, dau2_deepTauVsJet, metnomu_et, metnomu_phi, njets, njets20, njets50, bjet1_JER, bjet2_JER

selections = baseline, baseline_boosted

regions = SR

[configs]

sampleCfg = config/sampleCfg_UL16APV.cfg
cutCfg    = config/selectionCfg_MuMu_UL16APV.cfg
#pattern   = goodsystfiles  # use this only when running on systematics files


[merge_plots]
data_obs    = DsingleMuB, DsingleMuC, DsingleMuD, DsingleMuE, DsingleMuF
TT			= TTfullyHad, TTfullyLep, TTsemiLep
W			= WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
DY      	= DY_NLO_incl_stitch, DY_NLO_0J, DY_NLO_1J, DY_NLO_2J, DY_NLO_Pt0To50, DY_NLO_Pt50To100, DY_NLO_Pt100To250, DY_NLO_Pt250To400, DY_NLO_Pt400To650, DY_NLO_Pt650ToInf
H           = ZH_HTauTau, ZH_HBB_ZLL, ZH_HBB_ZQQ, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB, ttHJetToTauTau, ggHTauTau, VBFHTauTau, GGHH_SM#, VBF_SM
other		= EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, TWtop, TWantitop, singleTop_top, singleTop_antitop, TTWW, TTWZ, TTZZ, TTWJetsToQQ, WWW, WWZ, WZZ, ZZZ, WW, WZ, ZZ, TTWJetsToLNu, TTZToQQ, TTZToLLNuNu

[merge_limits]
# For limits
data_obs    = DsingleMuB, DsingleMuC, DsingleMuD, DsingleMuE, DsingleMuF
#data_obs    = DsingleMuB, DsingleMuC, DsingleMuD, DsingleMuE, DsingleMuF, DMETB, DMETC, DMETD, DMETE, DMETF
DY          = DY_NLO_Incl, DY_NLO_0jet, DY_NLO_1jet, DY_NLO_2jet, DY_NLO_PtZ-0To50, DY_NLO_PtZ-50To100, DY_NLO_PtZ-100To250, DY_NLO_PtZ-250To400, DY_NLO_PtZ-400To650, DY_NLO_PtZ-650ToInf


[pp_merge]
## parameters for QCD evaluation
## doFitIf : condition to be respected to make rlx-to-tight QCD fit. It is used as eval(doFitIf). Use names sel, var

[pp_QCD]
#for inverted QCD
QCDname      = QCD
SR           = SR
yieldSB      = OSinviso
shapeSB      = OSinviso
SBtoSRfactor = 1
doFitIf      = False
fitFunc      = [0] + [1]*x
regionC      = SStight
regionD      = SSinviso


[VBF_rew]
# !WARNING! The input samples MUST be in the order: node1, node2, node3, node4, node5, node19 !
# See the list 'inputSignals' to understand the link node<->couplings
doReweighting = False
inputSignals = VBFHH_CV_1_C2V_1_C3_1, VBFHH_CV_1_C2V_1_C3_0, VBFHH_CV_1_C2V_1_C3_2, VBFHH_CV_1_C2V_2_C3_1, VBFHH_CV_1_5_C2V_1_C3_1, VBFHH_CV_1_C2V_0_C3_2
target_kl  = 1
target_cv  = 0, 1
target_c2v = 1
target_xs = 1 #[pb]